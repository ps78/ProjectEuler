using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ProjectEuler
{
    /// <summary>
    /// https://projecteuler.net/problem=2
    /// 
    /// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
    /// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
    /// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
    /// </summary>
    public class Problem002 : EulerProblemBase
    {
        public Problem002() : base(2, "Even Fibonacci numbers", 4000000, 4613732) { }

        public override bool Test() => Solve(89) == 44;

        public override long Solve(long n)
        {
            long sum = 0;

            long fib1 = 1; // the previous fibonacci number
            long fib2 = 0; // the fibonacci number before the previous one
            long fib = 1;  // the current fibonnaci numbers
            while (fib <= n)
            {
                if (fib % 2 == 0)
                    sum += fib;

                fib2 = fib1;
                fib1 = fib;
                fib = fib1 + fib2;               
            }

            return sum;
        }
    }
}
